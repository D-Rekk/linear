@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --logotype-negative: calc(-1 * var(--logotype));
}

::-moz-selection {
  color: #fff;
  background: #4f52b4;
}

::selection {
  background: #4f52b4;
  color: #fff;
  -webkit-text-fill-color: #fff;
}

@layer base {
  html {
    @apply bg-background font-sans text-white;
    font-size: 62.5%;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -ms-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    overflow-x: hidden;
  }
}

.bg-primary-gradient {
  background-image: linear-gradient(
      180deg,
      theme(colors.brand-bg) -27%,
      #2831a800
    ),
    radial-gradient(rgb(40 53 193) 100%, theme(colors.brand-bg));
  text-shadow: 0.5px -0.5px 3px #ffffff52;
  &:hover {
    filter: brightness(115%);
  }
}

@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

a:not(:hover) > #logotype {
  @apply transparent;
}

a:hover > #logotype {
  animation-play-state: paused;
}

.icon-wrapper-parent:hover .icon-wrapper {
  transition: transform 1s ease;
  transform: translateX(0px);
  @apply bounce;
  animation-fill-mode: backwards;
}

.bounce {
  animation: bounce 2s ease-out infinite;
}

@keyframes bounce {
  0%,
  100% {
    transform: translateX(0px);
  }
  50% {
    transform: translateX(4px);
  }
}

.hero-image-wrapper {
  transform: rotateX(25deg);
  z-index: 1;
  path {
    stroke-dasharray: 1;
    stroke-dashoffset: 1;
  }
}

.hero-image-animation {
  animation: hero-image 1400ms ease forwards 400ms;

  > .hero-image {
    transition: opacity 800ms ease 800ms;
    z-index: 1;
  }
}

.hero {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  * {
    grid-area: 1 / 1 / 1 / 1;
  }
}

@keyframes hero-image {
  0% {
    transform: rotateX(25deg);
  }
  25% {
    transform: rotateX(25deg) scale(0.9);
  }
  60%,
  100% {
    transform: none;
  }
}

.toggle-opacity {
  opacity: 1;
}

.glow-base {
  background: conic-gradient(
    from 230.29deg at 51.63% 52.16%,
    rgb(36, 0, 255) 0deg,
    rgb(0, 135, 255) 67.5deg,
    rgb(108, 39, 157) 198.75deg,
    rgb(24, 38, 163) 251.25deg,
    rgb(54, 103, 196) 301.88deg,
    rgb(105, 30, 255) 360deg
  );
  filter: blur(160px);
  transform: translateZ(0px);
  opacity: 0;
}
.glow {
  animation: glow 4100ms ease-out forwards 600ms;
}

@keyframes glow {
  0% {
    opacity: 0;
    animation-timing-function: cubic-bezier(0.74, 0.25, 0.76, 1);
  }

  10% {
    opacity: 1;
    animation-timing-function: cubic-bezier(0.12, 0.01, 0.08, 0.99);
  }

  100% {
    opacity: 0.2;
  }
}

.silhouette-base {
  path {
    stroke: theme(colors.white/5);
    stroke-opacity: 0.2;
  }
}

.silhouette {
  path {
    animation: silhouette 800ms ease-out forwards 200ms;
  }
}

@keyframes silhouette {
  from {
    stroke-dashoffset: 1;
  }
  50%,
  99% {
    stroke-dashoffset: 0;
  }
  100% {
    visibility: hidden;
  }
}

.hero-strokes {
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.01);
  background-image: radial-gradient(
      ellipse 50% 80% at 20% 40%,
      rgba(93, 52, 221, 0.1),
      transparent
    ),
    radial-gradient(
      ellipse 50% 80% at 80% 50%,
      rgba(120, 119, 198, 0.15),
      transparent
    );
  position: relative;
  border-radius: 0.8rem;
  opacity: 0.2;
  animation: opacity forwards;

  &::before {
    content: "";
    pointer-events: none;
    user-select: none;
    position: absolute;
    inset: 0px;
    border-radius: 0.5rem;
    padding: 1px;
    background: linear-gradient(
      to bottom,
      rgba(95, 106, 210, 0.2),
      transparent
    );
    -webkit-mask: linear-gradient(black, black) content-box content-box,
      linear-gradient(black, black);
    -webkit-mask-composite: xor;
  }
  span {
    z-index: 1;
    position: absolute;
    border-radius: 2px;
    background: linear-gradient(
      var(--direction),
      #9d9bf2 0.43%,
      #7877c6 14.11%,
      rgba(120, 119, 198, 0) 62.95%
    );
    opacity: 0;
    /* animation-duration: var(--delay); */
    &.vertical {
      right: 0;
      width: 1px;
      height: calc(1px * var(--size));
      --direction: to top;
      animation: line-vertical var(--duration) ease-in forwards;
    }
    &.horizontal {
      top: 0;
      height: 1px;
      width: calc(1px * var(--size));
      --direction: to left;
      animation: line-horizontal var(--duration) ease-in forwards;
    }
  }
}

@keyframes opacity {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes line-horizontal {
  0% {
    opacity: 0;
    transform: translateX(0);
  }
  10% {
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateX(min(60vw, 90rem));
  }
}

@keyframes line-vertical {
  0% {
    opacity: 0;
    transform: translateY(0);
  }
  20% {
    opacity: 0;
  }
  40% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateY(min(34vw, 50rem));
  }
}

.sponsors {
  display: grid;
  grid: auto / repeat(var(--columns),minmax(0,1fr));
  place-items: center;
  row-gap: var(--row-gap);
  column-gap: var(--column-gap);
  --row-gap: 3.2rem;
  --column-gap: 2.4rem;
}

.stardust {
  position: relative;
  width: min(var(--page-max-width),100%);
  height: 600px;
  overflow: hidden;
  -webkit-mask-image: radial-gradient(circle, black, transparent 80%);

  > svg {
    -webkit-mask-image: radial-gradient(circle at center bottom, black, #0006);
  }
  &::before {
    content: "";
    position: absolute;
    inset: 0px;
    background: radial-gradient(circle at bottom center,#7877C6,transparent 70%);
    opacity: 0.4;
  }
  &::after {
    content: "";
    position: absolute;
    background: theme(colors.background);
    width: 200%;
    left: -50%;
    aspect-ratio: 1 / 0.7;
    border-radius: 50%;
    border-top: 1px solid rgba(120, 118, 197, 0.4);
    top: 50%;
  }
}

.cards {
  --gap: 2.4rem;
  --row: minmax(0,1fr);
  padding: 0 3.2rem;
  width: 100%;

  display: grid;
  grid-template-columns: [page-start] var(--row) [prose-start] var(--row) var(--row) var(--row) var(--row) [prose-end] var(--row) [page-end];
  grid-gap: var(--gap);
  & section {
    border-radius: 6.4rem;
    outline: 1px solid rgba(255, 255, 255, 0.1);

    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    & h3 {
      @apply text-lg
    }
    & p {
      @apply text-md
    }
  }
}